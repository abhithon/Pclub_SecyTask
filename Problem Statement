Time Limit: 2 sec / Memory Limit: 1024 MB

Problem Statement
Crue has a maze, which is a grid of M×N squares with M horizontal rows and N vertical columns.

The square at the i-th row from the top and the j-th column is a "wall" square if S 
ij is '#', and a "road" square if Sij is '.' .

From a road square, you can move to a horizontally or vertically adjacent road square.

You cannot move out of the maze, move to a wall square, or move diagonally.

Crue will choose a starting square and a goal square, which can be any road squares, and give the maze to Chez.

Chez will then travel from the starting square to the goal square, in the minimum number of moves required.

In this situation, find the maximum possible number of moves Chez has to make.

Constraints
1≤M,N≤20
Sij is . or #
S contains at least two occurrences of .
Any road square can be reached from any road square in zero or more moves.

Input
Input is given from Standard Input in the following format:

M N
S11...S1N
:
SM1...SMN
 
Output
Print the maximum possible number of moves Chez has to make.
